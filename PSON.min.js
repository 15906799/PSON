/*
 PSON (c) 2013 Daniel Wirtz <dcode@dcode.io>
 Released under the Apache License, Version 2.0
 see: https://github.com/dcodeIO/PSON for details
*/
(function(g){function h(b){if(!b)throw Error("PSON requires ProtoBuf.js: Get it at https://github.com/dcodeIO/ProtoBuf.js");var g=b.ByteBuffer,d=function(a,e){this.encoder=new d.Encoder(a);e&&this.encoder.freeze();this.decoder=new d.Decoder(a)};d.freeze=function(a){"object"===typeof a&&Object.defineProperty(a,"_PSON_FROZEN_",{value:!0,enumerable:!1,configurable:!0})};d.unfreeze=function(a){"object"===typeof a&&delete a._PSON_FROZEN_};b=b.newBuilder()["import"]({"package":"PSON",messages:[{name:"Message",
fields:[{rule:"repeated",type:"string",name:"dict",id:1,options:{packed:"true"}},{rule:"required",type:"Value",name:"data",id:2,options:{}}],enums:[],messages:[],options:{}},{name:"Value",fields:[{rule:"optional",type:"Special",name:"spc",id:1,options:{}},{rule:"optional",type:"uint32",name:"dic",id:2,options:{}},{rule:"optional",type:"Object",name:"obj",id:3,options:{}},{rule:"repeated",type:"Value",name:"arr",id:4,options:{}},{rule:"optional",type:"string",name:"str",id:5,options:{}},{rule:"optional",
type:"int32",name:"itg",id:6,options:{}},{rule:"optional",type:"float",name:"flt",id:7,options:{}},{rule:"optional",type:"double",name:"dbl",id:8,options:{}},{rule:"optional",type:"bytes",name:"bin",id:9,options:{}}],enums:[],messages:[],options:{}},{name:"Object",fields:[{rule:"repeated",type:"uint32",name:"dic",id:1,options:{packed:"true"}},{rule:"repeated",type:"string",name:"key",id:2,options:{packed:"true"}},{rule:"repeated",type:"Value",name:"val",id:3,options:{packed:"true"}}],enums:[],messages:[],
options:{}}],enums:[{name:"Special",values:[{name:"TRUE",id:1},{name:"FALSE",id:2},{name:"EOBJ",id:3},{name:"EARR",id:4},{name:"ESTR",id:5},{name:"EBIN",id:9},{name:"UDEF",id:10}],options:{}}],imports:[],options:{}}).build("PSON");d.Message=b.Message;d.Special=b.Special;d.Value=b.Value;d.Object=b.Object;b=function(a){a=a&&Array.isArray(a)?a:[];this.dict={};for(this.next=0;this.next<a.length;)this.dict[a[this.next]]=this.next++;this.stack=[];this.frozen=!1};b.prototype.freeze=function(){this.frozen=
!0};b.prototype.unfreeze=function(){this.frozen=!1};b.prototype.encode=function(a){a=this._encodeValue(a,this.frozen);var e=new d.Message;e.dict=this.stack;this.stack=[];e.data=a;return e.encode()};b.prototype._encodeValue=function(a,e){var c=new d.Value,b;if(null!==a)switch(typeof a){case "function":a=a.toString();case "string":""===a?c.spc=d.Special.ESTR:this.dict.hasOwnProperty(a)?c.ref=this.dict[a]:c.str=a;break;case "number":b=parseInt(a,10);a===b?c.itg=b:c.dbl=a;break;case "object":e=e||!!a._PSON_FROZEN_;
if(Array.isArray(a))if(0==a.length)c.spc=d.Special.EARR;else{c.arr=[];for(b=0;b<a.length;b++)c.arr.push(this._encodeValue(a[b],e))}else try{b=g.wrap(a),0==b.length?c.spc=d.Special.EBIN:c.bin=b}catch(h){var k=Object.keys(a),f;if(0==k.length)c.spc=d.Special.EOBJ;else{c.obj=new d.Object;for(b=0;b<k.length;b++)f=k[b],"undefined"!==typeof a[f]&&(e?c.obj.key.push(f):this.dict.hasOwnProperty(f)?c.obj.dic.push(this.dict[f]):(this.dict[f]=this.next,this.stack.push(f),c.obj.dic.push(this.next++)),c.obj.val.push(this._encodeValue(a[f],
e)))}}break;case "boolean":c.spc=a?d.Special.TRUE:d.Special.FALSE;break;case "undefined":c.spc=d.Special.UDEF}return c};d.Encoder=b;b=function(a){this.dict=a&&Array.isArray(a)?a:[]};b.prototype.decode=function(a){a=d.Message.decode(a);for(var b=0;b<a.dict.length;b++)this.dict.push(a.dict[b]);return this._decodeValue(a.data)};b.prototype._decodeValue=function(a){if(a.spc)switch(a.spc){case d.Special.TRUE:return!0;case d.Special.FALSE:return!1;case d.Special.EOBJ:return{};case d.Special.EARR:return[];
case d.Special.ESTR:return"";case d.Special.EBIN:return new g(0)}else{if(null!==a.dic)return this.dict[a.dic];if(null!==a.obj){var b={},c;if(0<a.obj.dic.length)for(c=0;c<a.obj.dic.length;c++)b[this.dict[a.obj.dic[c]]]=this._decodeValue(a.obj.val[c]);else for(c=0;c<a.obj.key.length;c++)b[a.obj.key[c]]=this._decodeValue(a.obj.val[c]);return b}if(0<a.arr.length){b=[];for(c=0;c<a.arr.length;c++)b.push(this._decodeValue(a.arr[c]));return b}return null!==a.str?a.str:null!==a.itg?a.itg:null!==a.flt?a.flt:
null!==a.dbl?a.dbl:null!==a.bin?a.bin:null}};d.Decoder=b;d.prototype.encode=function(a){return this.encoder.encode(a)};d.prototype.toBuffer=function(a){return this.encode(a).toBuffer()};d.prototype.toArrayBuffer=function(a){return this.encode(a).toArraybuffer()};d.prototype.decode=function(a){return this.decoder.decode(a)};return d}"undefined"!=typeof module&&module.exports?module.exports=h(require("protobufjs")):"undefined"!=typeof define&&define.amd?define("PSON",["ProtoBuf"],h):(g.dcodeIO||(g.dcodeIO=
{}),g.dcodeIO.PSON=h(g.dcodeIO.ProtoBuf))})(this);
