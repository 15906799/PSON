/*
 PSON (c) 2013 Daniel Wirtz <dcode@dcode.io>
 Released under the Apache License, Version 2.0
 see: https://github.com/dcodeIO/PSON for details
*/
(function(f){function h(b){if(!b)throw Error("PSON requires ProtoBuf.js: Get it at https://github.com/dcodeIO/ProtoBuf.js");var d=function(a){this.encoder=new d.Encoder(a);this.decoder=new d.Decoder(a)};d.freeze=function(a){"object"===typeof a&&Object.defineProperty(a,"_PSON_FROZEN_",{value:!0,enumerable:!1,configurable:!0})};d.unfreeze=function(a){"object"===typeof a&&delete a._PSON_FROZEN_};b=b.newBuilder()["import"]({"package":"PSON",messages:[{name:"Message",fields:[{rule:"repeated",type:"Value",
name:"dict",id:1,options:{packed:"true"}},{rule:"required",type:"Value",name:"data",id:2,options:{}}],enums:[],messages:[],options:{}},{name:"Value",fields:[{rule:"optional",type:"uint32",name:"ref",id:1,options:{}},{rule:"optional",type:"bool",name:"udf",id:2,options:{}},{rule:"optional",type:"Object",name:"obj",id:3,options:{}},{rule:"optional",type:"Array",name:"arr",id:4,options:{}},{rule:"optional",type:"string",name:"str",id:5,options:{}},{rule:"optional",type:"int32",name:"itg",id:6,options:{}},
{rule:"optional",type:"float",name:"flt",id:7,options:{}},{rule:"optional",type:"double",name:"dbl",id:8,options:{}},{rule:"optional",type:"bool",name:"bln",id:9,options:{}},{rule:"optional",type:"bytes",name:"byt",id:10,options:{}}],enums:[],messages:[],options:{}},{name:"Object",fields:[{rule:"repeated",type:"uint32",name:"ref",id:1,options:{packed:"true"}},{rule:"repeated",type:"string",name:"key",id:2,options:{packed:"true"}},{rule:"repeated",type:"Value",name:"val",id:3,options:{packed:"true"}}],
enums:[],messages:[],options:{}},{name:"Array",fields:[{rule:"repeated",type:"Value",name:"val",id:1,options:{packed:"true"}}],enums:[],messages:[],options:{}}],enums:[],imports:[],options:{}}).build("PSON");d.Message=b.Message;d.Value=b.Value;d.Array=b.Array;d.Object=b.Object;b=function(a){a=a&&Array.isArray(a)?a:[];this.dict={};for(this.next=0;this.next<a.length;)this.dict[a[this.next]]=this.next++;this.stack=[];this.frozen=!1};b.prototype.freeze=function(){this.frozen=!0};b.prototype.unfreeze=
function(){this.frozen=!1};b.prototype.encode=function(a){a=this._encodeValue(a,this.frozen);for(var e=new d.Message;0<this.stack.length;)e.dict.push(new d.Value({str:this.stack.shift()}));e.data=a;return e.encode()};b.prototype._encodeValue=function(a,e){var c=new d.Value,b;if(null!==a)switch(typeof a){case "undefined":c.udf=!0;break;case "string":this.dict.hasOwnProperty(a)?c.ref=this.dict[a]:c.str=a;break;case "number":b=parseInt(a,10);a===b?c.itg=b:c.dbl=a;break;case "object":e=e||!!a._PSON_FROZEN_;
if(Array.isArray(a)){c.arr=new d.Array;for(b=0;b<a.length;b++)c.arr.val.push(this._encodeValue(a[b],e))}else{c.obj=new d.Object;var f=Object.keys(a),g;for(b=0;b<f.length;b++)g=f[b],this.dict.hasOwnProperty(g)?c.obj.ref.push(this.dict[g]):e?c.obj.key.push(g):(this.dict[g]=this.next,this.stack.push(g),c.obj.ref.push(this.next++)),c.obj.val.push(this._encodeValue(a[g],e))}break;case "boolean":c.bln=a}return c};d.Encoder=b;b=function(a){this.dict=a&&Array.isArray(a)?a:[]};b.prototype.decode=function(a){a=
d.Message.decode(a);for(var b=0;b<a.dict.length;b++)this.dict.push(a.dict[b].str);return this._decodeValue(a.data)};b.prototype._decodeValue=function(a){if(null!==a.ref)return this.dict[a.ref];if(!0!==a.udf){if(null!==a.obj){var b={},c;if(0<a.obj.ref.length)for(c=0;c<a.obj.ref.length;c++)b[this.dict[a.obj.ref[c]]]=this._decodeValue(a.obj.val[c]);else for(c=0;c<a.obj.key.length;c++)b[a.obj.key[c]]=this._decodeValue(a.obj.val[c]);return b}if(null!==a.arr){b=[];for(c=0;c<a.arr.val.length;c++)b.push(this._decodeValue(a.arr.val[c]));
return b}return null!==a.str?a.str:null!==a.itg?a.itg:null!==a.flt?a.flt:null!==a.dbl?a.dbl:null!==a.bln?a.bln:null}};d.Decoder=b;d.prototype.encode=function(a){return this.encoder.encode(a)};d.prototype.toBuffer=function(a){return this.encode(a).toBuffer()};d.prototype.toArrayBuffer=function(a){return this.encode(a).toArraybuffer()};d.prototype.decode=function(a){return this.decoder.decode(a)};return d}"undefined"!=typeof module&&module.exports?module.exports=h(require("protobufjs")):"undefined"!=
typeof define&&define.amd?define("PSON",["ProtoBuf"],h):(f.dcodeIO||(f.dcodeIO={}),f.dcodeIO.PSON=h(f.dcodeIO.ProtoBuf))})(this);
