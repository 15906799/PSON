/**
 * PSON (c) 2013 Daniel Wirtz
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/PSON for details
 */
package PSON;

// A PSON Message
message Message {
    repeated string dict = 1 [packed=true]; // Zero to N new dictionary keywords in encoding order
    required Value  data = 2;               // The actual data
}

// A PSON Value
message Value { // Contains zero or exactly one of the following fields:

                              // Description          | JS type
                              // ---------------------+---------------------------------------
    optional Special spc = 1; // Special type         | true, false, {}, [], "", <>, undefined
    optional uint32  dic = 2; // Dictionary reference | string
    optional Object  obj = 3; // Non-empty Object     | Object
    repeated Value   arr = 4; // Non-empty Array      | Array
    optional string  str = 5; // UTF-8 string         | string
    optional int32   itg = 6; // 32bit integer        | number
    optional float   flt = 7; // 32bit float          | number
    optional double  dbl = 8; // 64bit double         | number
    optional bytes   bin = 9; // Binary data          | ArrayBuffer
                              // Empty                | null
}

// PSON special types
enum Special {
    TRUE  = 1; // boolean true
    FALSE = 2; // boolean false
    EOBJ  = 3; // empty object
    EARR  = 4; // empty array
    ESTR  = 5; // empty string
    EBIN  = 9; // empty binary data
    UDEF = 10; // undefined (used for Message.data only and is skipped in objects)
}

// A PSON Object
message Object {
    repeated uint32 dic = 1 [packed=true]; // EITHER: Zero to N dictionary references -> string
    repeated string key = 2 [packed=true]; //     OR: Zero to N plain text keys
    repeated Value  val = 3 [packed=true]; // Zero to N values using the keys from above with the same index
}
